ORG 0x000                       ; инициализация векторов прерывания
V0:     WORD    $DEF,   0x180   ; вектор прерывания #0
V1:     WORD    $INT1,  0x180   ; вектор прерывания #1
V2:     WORD    $DEF,   0x180   ; вектор прерывания #2
V3:     WORD    $INT1,  0x188   ; вектор прерывания #3
V4:     WORD    $DEF,   0x180   ; вектор прерывания #4
V5:     WORD    $DEF,   0x180   ; вектор прерывания #5
V6:     WORD    $DEF,   0x180   ; вектор прерывания #6
V7:     WORD    $DEF,   0x180   ; вектор прерывания #7


ORG 0x015
X:      WORD    0x01  ; слово X


ORG 0x020               ; стандартный прерывания
DEF:    IRET


ORG 0x030               ; обработчик прерывания 1
INT1:   PUSH            ; сохраняем AC
        NOP
        LD      X       ; загружаем X
        ASL             ; 2*X
        ASL             ; 2*2*X
        ADD     X       ; 2*2*X + X
        ADD     X       ; 2*2*X + X + X (6X)
        SUB     #4      ; 6X - 4
        OUT     2       ; вывод на ву-1
        POP             ; возвращаем AC
        NOP
        IRET            ; возврат из обработки прерывания


ORG 0x040               ; обработчик прерывания 3
INT3:   PUSH            ; сохраняем AC
        NOP
        IN      6       ; ввод с ву-3
        OR      X       ; побитовое или с X
        ST      X       ; сохраняем в X

        OUT     6
        NOP
        
        POP             ; возвращаем AC
        IRET            ; возврат из обработки прерывания


ORG 0x050
MIN:    WORD    0xFFEC  ; -20, минимальное значение
MAX:    WORD    0x0015  ; 21, максимальное значение
CHECK:                  ; проверка X на ОДЗ
CMP1:   CMP     MIN     ; X >= минимального значения?
        BPL     CMP2    ; да - переход к следующей проверке
        LD      MAX     ; нет - загружаем минимальное значение
CMP2:   CMP     MAX     ; X < максимального значения?
        BMI     RETURN  ; да - возврат
        LD      MAX     ; нет - загружаем максимальное значение
RETURN: RET             ; возврат


ORG 0x060               ; основная программа
START:  DI              ; запрет прерываний

                        ; загрузка векторов прерывания
        LD      #0x9    ; разрешить прерывания и вектор #1
        OUT     0x3     ; (1|001) B MR ВУ-1
        LD      #0xB    ; разрешить прерывания и вектор #3
        OUT     0x7     ; (1|011) B MR ВУ-3
        EI              ; разрешение прерываний

        JUMP    PROG    ; переход к основной программе

PROG:   EI              ; разрешение прерываний
        CLA             ; очистка аккумулятора

PLOOP:                  ; цикл обработки X
        DI              ; запрет прерываний для атомарности операции
        LD      X       ; загрузка X
        SUB     #2      ; вычитание 2
        CALL    CHECK   ; проверка на ОДЗ
        ST      X       ; сохранение в ячейку
        EI              ; разрешение прерываний
        JUMP    PLOOP   ; спинлуп
